[{"/Users/wonjaelee/Desktop/wonjae_web/src/index.js":"1","/Users/wonjaelee/Desktop/wonjae_web/src/App.js":"2","/Users/wonjaelee/Desktop/wonjae_web/src/reportWebVitals.js":"3","/Users/wonjaelee/Desktop/wonjae_web/src/pages/Router.js":"4","/Users/wonjaelee/Desktop/wonjae_web/src/pages/components/Footer.js":"5","/Users/wonjaelee/Desktop/wonjae_web/src/pages/login.js":"6","/Users/wonjaelee/Desktop/wonjae_web/src/pages/components/Navi.js":"7","/Users/wonjaelee/Desktop/wonjae_web/src/pages/PageNotFound.js":"8","/Users/wonjaelee/Desktop/wonjae_web/src/pages/components/PostDetail.js":"9","/Users/wonjaelee/Desktop/wonjae_web/src/fbase.js":"10","/Users/wonjaelee/Desktop/wonjae_web/src/pages/about.js":"11","/Users/wonjaelee/Desktop/wonjae_web/src/pages/blog.js":"12","/Users/wonjaelee/Desktop/wonjae_web/src/pages/work.js":"13"},{"size":547,"mtime":1624663738765,"results":"14","hashOfConfig":"15"},{"size":269,"mtime":1624663738764,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1624663738789,"results":"17","hashOfConfig":"15"},{"size":1545,"mtime":1646027056720,"results":"18","hashOfConfig":"15"},{"size":916,"mtime":1646027083169,"results":"19","hashOfConfig":"15"},{"size":4872,"mtime":1646592748197,"results":"20","hashOfConfig":"15"},{"size":820,"mtime":1646027121840,"results":"21","hashOfConfig":"15"},{"size":186,"mtime":1624663738765,"results":"22","hashOfConfig":"15"},{"size":772,"mtime":1624663738766,"results":"23","hashOfConfig":"15"},{"size":661,"mtime":1624663738764,"results":"24","hashOfConfig":"15"},{"size":1416,"mtime":1646032807869,"results":"25","hashOfConfig":"15"},{"size":7815,"mtime":1646032894321,"results":"26","hashOfConfig":"15"},{"size":4959,"mtime":1646033127947,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"c236nk",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/wonjaelee/Desktop/wonjae_web/src/index.js",[],["60","61"],"/Users/wonjaelee/Desktop/wonjae_web/src/App.js",["62"],"import AppRouter from \"./pages/Router.js\"\nimport Footer from \"./pages/components/Footer.js\"\nimport './App.css';\nimport { Router } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n    <>\n        <AppRouter />\n        <Footer />\n    </>\n  );\n}\n\nexport default App;\n","/Users/wonjaelee/Desktop/wonjae_web/src/reportWebVitals.js",[],"/Users/wonjaelee/Desktop/wonjae_web/src/pages/Router.js",["63","64","65","66","67"],"import React, {useState} from \"react\";\nimport \"./css/Router.css\"\nimport About from './about.js'\nimport Work from './work.js';\nimport Blog from './blog.js'\nimport PageNotFound from './PageNotFound.js'\nimport Navi from './components/Navi.js'\nimport PostDetail from './components/PostDetail'\nimport Login from './login.js'\nimport { authService, firebaseInstance } from \"../fbase\";\nimport {Container, Col} from \"reactstrap\"\nimport {BrowserRouter as Router, Route, Link, Switch} from \"react-router-dom\";\nimport {Box} from \"grommet\";\n\nconst AppRouter = () => {\n\n    const [userObj, setUserObj] = useState(null);\n\n    return (\n        <>\n        <Container id = \"Router\">\n          <Router>\n            {/* naviagtion section */}\n            <Navi />\n            {/* Log in section */}\n                \n            {/* Switch Section  */}\n            <Container id = \"content\">\n            <Switch>\n                <Route exact path= \"/\" component ={About} />\n                <Route exact path= \"/work\" component ={Work} />\n                <Route exact path= \"/blog\">\n                    <Blog userObj = {userObj}/>\n                </Route>\n                <Route path= \"/blog/:id\" component={PostDetail} userObj = {userObj}/>\n                <Route path = \"/login\">\n                    <Login userObj = {userObj} setUserObj={setUserObj}/>\n                </Route>\n                <Route component = {PageNotFound} />\n            </Switch>\n            </Container>\n          </Router>\n        </Container>\n        </>\n      )\n}\nexport default AppRouter","/Users/wonjaelee/Desktop/wonjae_web/src/pages/components/Footer.js",["68"],"import React from \"react\";\nimport \"../css/footer.css\"\nimport {Grommet, Footer as Ft, Text, Anchor} from \"grommet\"\n\nconst Footer = () => {\n    return (\n        // <div className = \"footer\">\n        //     <a href=\"\" target= \"_blank\">\n        //         <img className = \"contact-icon\" src={require('../img/facebook-black.png').default} alt = \"\"/>   \n        //     </a>\n        //     <img className = \"contact-icon\" src={require('../img/instagram-black.png').default} alt = \"\"/>\n        //     <img className = \"contact-icon\" src={require('../img/linkedin-black.png').default} alt = \"\"/>\n        //     <img className = \"contact-icon\" src={require('../img/twitter-withoutbackground.png').default} alt = \"\"/>\n        // </div>\n        <Ft background=\"brand\" pad=\"medium\">\n        <Text>Copyright</Text>\n        <Anchor label=\"About\" />\n        <Anchor label=\"fdafafda\" />\n\n        </Ft>\n    )\n}\n\nexport default Footer","/Users/wonjaelee/Desktop/wonjae_web/src/pages/login.js",["69","70","71"],"/Users/wonjaelee/Desktop/wonjae_web/src/pages/components/Navi.js",["72"],"import React from \"react\";\nimport {Row} from \"reactstrap\"\nimport {BrowserRouter as Router, Link} from \"react-router-dom\"\nimport \"../css/navi.css\"\nconst Navi = () => {\n    return (\n            <Row id = \"navigationBar\">\n                <div id = \"about\" className = \"navigation-item\">\n                    <Link to = \"/\">About</Link>\n                </div>\n                <div id = \"work\" className = \"navigation-item\">\n                    <Link to = \"/work\">Work</Link>\n                </div>\n                <div id = \"blog\" className = \"navigation-item\">\n                    <Link to = \"/blog\">Blog</Link>\n                </div>\n                <div id = \"login\" className = \"navigation-item\">\n                    <Link to = \"/login\">Log in</Link>\n                </div>\n            </Row>\n    )\n}\n\nexport default Navi","/Users/wonjaelee/Desktop/wonjae_web/src/pages/PageNotFound.js",[],"/Users/wonjaelee/Desktop/wonjae_web/src/pages/components/PostDetail.js",[],"/Users/wonjaelee/Desktop/wonjae_web/src/fbase.js",[],"/Users/wonjaelee/Desktop/wonjae_web/src/pages/about.js",[],"/Users/wonjaelee/Desktop/wonjae_web/src/pages/blog.js",["73","74","75","76","77","78","79","80","81"],"import React, { useEffect, useState } from \"react\";\nimport { dbService, storageService } from \"../fbase.js\";\nimport {Container, Col, Row} from \"reactstrap\"\nimport {Link} from \"react-router-dom\"\nimport \"./css/blog.css\"\nimport {v4 as uuidv4} from \"uuid\";\nimport { Box, Grommet, Pagination, Text } from 'grommet';\n\nconst Blog = (props) => {\n    //PostTitle is for the title of the post\n    const [postTitle, setPostTitle] = useState(\"\");\n    //Text is for the content of the post\n    const [text, setText] = useState(\"\");\n    //Posts is for the array of posts in the db.\n    const [posts, setPosts] = useState([]);\n    //Attachment is the file of the post.\n    const [attachment, setAttachment] = useState(\"\");\n    //isWriting tells the machine if the user wants to write.\n    //The default value is false\n    const [isWriting, setIsWriting] = useState(false);\n\n    //Userobject is the value of user info.\n    const [userObj, setUserObj] = useState(null);\n\n    //currentPostIndex represent what is the current post index number.\n    //If you want to show n posts at once, set this state to n - 1\n    const [currentPostIndex, setCurrentPostIndex] = useState(0);\n\n    //Change this value to change number of posts in one view.\n    const [numberOfPostsInOneView, setNumberOfPostsInOneView] = useState(10);\n\n    //This will update the state \"posts\"\n    const getPosts = async () => {\n        const dbPosts = await dbService.collection(\"posts\").orderBy(\"createdAt\", \"asc\").get();\n        dbPosts.forEach((document) => {\n            const postObj = {\n                id : document.id,\n                ...document.data(), \n            };\n            setPosts((prev) => [postObj, ...prev])\n        });\n    }\n\n    //useEffect will run when the page is loaded.\n    useEffect(() => {\n        getPosts();\n        setUserObj(props.userObj)\n        window.scrollTo(0, 0)\n    },[])\n\n    //user post using webpage\n    const onSubmit = async(event) => {\n\n        //Prevents submission of nothing\n        event.preventDefault();\n\n        let attachmentUrl = \"\";\n\n        if (attachment != \"\") {\n            const attachmentRef = storageService\n            .ref()\n            .child(`test/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n\n        const postObj = {\n            createdAt : Date.now(),\n            post : text,\n            title : postTitle,\n            topic : \"default\",\n            likes : 0,\n            views : 0,\n            photo : \"\",\n            attachmentUrl\n        }\n\n        await dbService.collection(\"posts\").add(postObj);\n        setText(\"\");\n        setPostTitle(\"\");\n        setAttachment();\n    }\n\n    //display changed value (example: change in \n    //title, content, etc\n    //\n    const onTextChange = (event) => {\n        const {target : {value}, } = event;\n        setText(value);\n    }\n\n    const onTitleChange = (event) => {\n        const {target : {value}, } = event;\n        setPostTitle(value);\n    }\n\n\n    const dateConverter = (dateString) => {\n        const parstDate = dateString.split(\" \")\n        return (parstDate[1] + \" \" + parstDate[2] + \", \"+ parstDate[3] + \" \" + parstDate[4] + \" (KST)\");\n    }\n\n    const onFileChange = (event) => {\n        const {\n            target: {files},\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: {result}} = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n\n    const onClearAttachment = (event) => {\n        setAttachment(null);\n    }\n\n    return (\n        <Container>\n            <Container id = \"post-view\">\n            <div id = \"posting\">Blog</div>\n            <Row> \n            {posts.slice(currentPostIndex, (currentPostIndex + numberOfPostsInOneView)).map((post) => (\n                    <div className = \"post\" key = {post.id}>\n                    <Link to = {{\n                        pathname: `/blog/${post.id}`,\n                        state: post\n                    }}>\n                        {post.attachmentUrl ? <img src={post.attachmentUrl} className = \"post-photo\"/> \n                        :\n                        <img src={require('./img/EECS-logo.png').default} className = \"post-photo\"/>}\n                        {/* <div className = \"timestamp\">{dateConverter(new Date(post.createdAt).toString())}</div> */}\n                    </Link>\n                    </div>\n                ))}\n            </Row>\n\n            {/* Pagination Section */}\n            {\n                <Box\n                    pad={{ top: 'medium', bottom: 'medium', horizontal: 'medium' }}\n                    id = \"blog-pagination\"\n                >\n                    <Text margin={{ bottom: 'small' }}>\n                    Click the button below for navigating posts!        \n                    </Text>\n                    <Pagination onChange={(event)=>{<>\n                    {setCurrentPostIndex(event.startIndex)}\n                    </>}} numberItems={posts.length} step={numberOfPostsInOneView}/>\n                </Box>\n            }\n\n            </Container>\n            {userObj ? \n                <>\n                {/* Super user login was successful */}\n                        { isWriting ? \n                            <>\n                                <Box>\n                                    <textarea\n                                            id = \"title-box\"\n                                            type = \"text\"\n                                            value = {postTitle}\n                                            onChange = {onTitleChange}\n                                            placeholder = \"What is the title of your post?\"\n                                            cols = {50}\n                                            rows = {1}\n                                    />\n                                </Box>\n                                <Box direction=\"column\">\n                                <form onSubmit = {onSubmit}>\n                                <textarea\n                                        id = \"writing-box\"\n                                        type=\"text\"\n                                        value={text}\n                                        onChange={onTextChange}\n                                        placeholder=\"What's on your mind?\"\n                                        cols = {80}\n                                        rows = {10}\n                                />\n                                <input type=\"file\" accept = \"image/*\" onChange = {onFileChange}/>\n                                <input type=\"submit\" value = \"upload\" />\n                                </form>\n                                {/* <input type=\"file\" accept=\"image/*\"/> */}\n                                <input type = \"button\" value = \"Cancel\" onClick={()=>{setIsWriting(false)}} />\n                                {attachment &&\n                                    <div>\n                                        <img src={attachment} width = \"50px\" height = \"50px\"/>\n                                        <button onClick={onClearAttachment}>Clear</button>\n                                        </div>\n                                    }\n                                </Box>\n                            </>\n                                :\n                                <button onClick={()=>{setIsWriting(true)}}>\n                                    Write Post\n                                </button>\n                        }\n            </>\n            :\n                null\n            }\n        </Container>\n    )\n\n    \n}\n\n\nexport default Blog;","/Users/wonjaelee/Desktop/wonjae_web/src/pages/work.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":4,"column":10,"nodeType":"88","messageId":"89","endLine":4,"endColumn":16},{"ruleId":"86","severity":1,"message":"90","line":10,"column":10,"nodeType":"88","messageId":"89","endLine":10,"endColumn":21},{"ruleId":"86","severity":1,"message":"91","line":10,"column":23,"nodeType":"88","messageId":"89","endLine":10,"endColumn":39},{"ruleId":"86","severity":1,"message":"92","line":11,"column":20,"nodeType":"88","messageId":"89","endLine":11,"endColumn":23},{"ruleId":"86","severity":1,"message":"93","line":12,"column":41,"nodeType":"88","messageId":"89","endLine":12,"endColumn":45},{"ruleId":"86","severity":1,"message":"94","line":13,"column":9,"nodeType":"88","messageId":"89","endLine":13,"endColumn":12},{"ruleId":"86","severity":1,"message":"95","line":3,"column":9,"nodeType":"88","messageId":"89","endLine":3,"endColumn":16},{"ruleId":"86","severity":1,"message":"96","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"91","line":2,"column":23,"nodeType":"88","messageId":"89","endLine":2,"endColumn":39},{"ruleId":"86","severity":1,"message":"97","line":3,"column":25,"nodeType":"88","messageId":"89","endLine":3,"endColumn":28},{"ruleId":"86","severity":1,"message":"87","line":3,"column":26,"nodeType":"88","messageId":"89","endLine":3,"endColumn":32},{"ruleId":"86","severity":1,"message":"92","line":3,"column":20,"nodeType":"88","messageId":"89","endLine":3,"endColumn":23},{"ruleId":"86","severity":1,"message":"95","line":7,"column":15,"nodeType":"88","messageId":"89","endLine":7,"endColumn":22},{"ruleId":"86","severity":1,"message":"98","line":30,"column":36,"nodeType":"88","messageId":"89","endLine":30,"endColumn":61},{"ruleId":"99","severity":1,"message":"100","line":49,"column":7,"nodeType":"101","endLine":49,"endColumn":9,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":59,"column":24,"nodeType":"105","messageId":"106","endLine":59,"endColumn":26},{"ruleId":"86","severity":1,"message":"107","line":98,"column":11,"nodeType":"88","messageId":"89","endLine":98,"endColumn":24},{"ruleId":"108","severity":1,"message":"109","line":131,"column":47,"nodeType":"110","endLine":131,"endColumn":103},{"ruleId":"108","severity":1,"message":"109","line":133,"column":25,"nodeType":"110","endLine":133,"endColumn":101},{"ruleId":"108","severity":1,"message":"109","line":190,"column":41,"nodeType":"110","endLine":190,"endColumn":95},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'authService' is defined but never used.","'firebaseInstance' is defined but never used.","'Col' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'Grommet' is defined but never used.","'useEffect' is defined but never used.","'Row' is defined but never used.","'setNumberOfPostsInOneView' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.userObj'. Either include it or remove the dependency array. If 'setUserObj' needs the current value of 'props.userObj', you can also switch to useReducer instead of useState and read 'props.userObj' in the reducer.","ArrayExpression",["113"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'dateConverter' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [props.userObj]",{"range":"116","text":"117"},[1860,1862],"[props.userObj]"]